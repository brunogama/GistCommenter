//
//  QRCodeReaderProtocols.swift
//  GistCommenter
//
//  Created Bruno Gama on 21/03/2018.
//  Copyright © 2018 Bruno Gama. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

// MARK: Wireframe -
internal protocol QRCodeReaderWireframeProtocol: class {

}
// MARK: Presenter -
internal protocol QRCodeReaderPresenterProtocol: class {

    var interactor: QRCodeReaderInteractorInputProtocol? { get set }

    func viewDidLoad()
    func newReading()
}

// MARK: Interactor -
internal protocol QRCodeReaderInteractorOutputProtocol: class {

    /* Interactor -> Presenter */

    func didReceived(data: QRCodeReadable.QRCodeData)
}

internal protocol QRCodeReaderInteractorInputProtocol: class {

    var codeReader: QRCodeReadable? { get set }
    var presenter: QRCodeReaderInteractorOutputProtocol? { get set }

    /* Presenter -> Interactor */

//    func checkForCameraPermissions
    func didReceived(data: QRCodeReadable.QRCodeData)
    func startReader()
    func stopReader()
}

// MARK: View -
internal protocol QRCodeReaderViewProtocol: class {

    var presenter: QRCodeReaderPresenterProtocol? { get set }

    /* Presenter -> ViewController */

    func presentCameraPermissionWarning()
    func showGistAlert()
    func showInvalidCodeAlert()
    func updateStatus(codeValue: String)
    func updateViewFinder(area: CGRect)
    func loading()
}
