//
//  GistDetailProtocols.swift
//  GistCommenter
//
//  Created Bruno Gama on 23/03/2018.
//  Copyright © 2018 Bruno Gama. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Moya
import UIKit

// MARK: Wireframe -
internal protocol GistDetailWireframeProtocol: class {

func presentDetailView(from view: GistDetailViewProtocol?, file: FileModel)
}

// MARK: Presenter -
internal protocol GistDetailPresenterProtocol: class {

    var interactor: GistDetailInteractorInputProtocol? { get set }

    func viewDidLoad()
    func openFileDetailsView(file: FileModel)
    func authenticateWith(username: String, password: String)
    func sendMessageFor(gistId: GistId, message: String)
    func authenticateOrSendMessageAction()
}

// MARK: Interactor -
internal protocol GistDetailInteractorOutputProtocol: class {

    /* Interactor -> Presenter */
    func didReceived(comments: [GistComment])
    func authenticated()
    func authenticationFail()
    func onMessageFailure()
    func onMessageSent(message: GistComment)
}

internal protocol GistDetailInteractorInputProtocol: class {
    var presenter: GistDetailInteractorOutputProtocol? { get set }
    var remoteDataManager: RemoteDataManagerInputProtocol? { get set }

    func retrieveComments(fromGistId: GistId)
    func retrieveCrendetials(username: String, password: String)
    func sendMessage(forGistId: GistId, message: String)

    /* Presenter -> Interactor */
}

// MARK: View -
internal protocol GistDetailViewProtocol: class {

    var presenter: GistDetailPresenterProtocol? { get set }
    var datasource: (GistDetailDatasourceProtocol & UITableViewDataSource)? { get set }
    /* Presenter -> ViewController */

    func loading()
    func hideLoading()
    func show(comments: [GistComment])
    func presentEmpty()
    func requestCredentials()
    func presentMessageInput()
    func sendingMessage()
    func messageSent(message: GistComment)
    func messageFail()
    func authenticating()
    func authenticationFail()
    func prepareToSendMessage()
}
