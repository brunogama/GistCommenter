//
//  GistDetailRouter.swift
//  GistCommenter
//
//  Created Bruno Gama on 23/03/2018.
//  Copyright © 2018 Bruno Gama. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import  Moya
import UIKit

internal final class GistDetailRouter: GistDetailWireframeProtocol {
    weak var viewController: UIViewController?
    #if DEBUG
    static let isNetworkLoggerEnabled = true
    #else
    static let isNetworkLoggerEnabled = false
    #endif

    static func createModule(gist: GistModel) -> UIViewController {
        let dataSource = GistDetailDatasource(gistModel: gist)
        let view = GistDetailViewController.instantiate()
        view.datasource = dataSource

        let interactor = GistDetailInteractor()

        let provider = MoyaProvider<GistService>(plugins: [NetworkLoggerPlugin(verbose: isNetworkLoggerEnabled)])
        let client = Client(provider: provider)
        client?.remoteRequestHandler = interactor

        interactor.remoteDataManager = client

        let router = GistDetailRouter()
        let presenter = GistDetailPresenter(interface: view, interactor: interactor, router: router)

        view.presenter = presenter
        interactor.presenter = presenter
        router.viewController = view

        return view
    }

    func presentDetailView(from view: GistDetailViewProtocol?, file: FileModel) {
        if let sourceView = view as? UIViewController {
            let detinationView = FileDetailRouter.createModule(fileModel: file)
            sourceView.navigationController?.pushViewController(detinationView, animated: true)
        }
    }
}
