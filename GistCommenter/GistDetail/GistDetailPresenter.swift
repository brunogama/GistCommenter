//
//  GistDetailPresenter.swift
//  GistCommenter
//
//  Created Bruno Gama on 23/03/2018.
//  Copyright © 2018 Bruno Gama. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Moya
import UIKit

internal class GistDetailPresenter: GistDetailPresenterProtocol, GistDetailInteractorOutputProtocol {

    weak private var view: GistDetailViewProtocol?
    var interactor: GistDetailInteractorInputProtocol?
    private let router: GistDetailWireframeProtocol

    init(interface: GistDetailViewProtocol,
         interactor: GistDetailInteractorInputProtocol?,
         router: GistDetailWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }

    // MARK: - GistDetailPresenterProtocol

    func viewDidLoad() {
        view?.loading()
//        let urlString = "https://gist.github.com/brunogama/a3f7520c9727bc3d134818658fcae5dd"
//        let urlString = "https://gist.github.com/akitaonrails/711b5553533d1a14364907bbcdbee677"
//        let urlString = "https://gist.github.com/brunogama/244ec4359c3ff33d56888a1dbdbf94f5"
//        DispatchQueue.main.asyncAfter(deadline: .now() + .seconds(1)) {
//            self.interactor?.requestGistModel(url: URL(string: urlString)!)
//        }
    }

    // MARK: - GistDetailInteractorOutputProtocol
    func didReceived(comments: [GistComment]) {
        view?.show(comments: comments)
    }

}
