//
//  GistDetailPresenter.swift
//  GistCommenter
//
//  Created Bruno Gama on 23/03/2018.
//  Copyright © 2018 Bruno Gama. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Moya
import UIKit

internal class GistDetailPresenter: GistDetailPresenterProtocol, GistDetailInteractorOutputProtocol {

    weak private var view: GistDetailViewProtocol?
    var interactor: GistDetailInteractorInputProtocol?
    private let router: GistDetailWireframeProtocol
    private var gistId: GistId {
        if let gistId = view?.datasource?.gistModel.id {
            return gistId
        }
        return ""
    }

    init(interface: GistDetailViewProtocol,
         interactor: GistDetailInteractorInputProtocol?,
         router: GistDetailWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }

    // MARK: - GistDetailPresenterProtocol

    func viewDidLoad() {
        view?.loading()
        interactor?.retrieveComments(fromGistId: gistId)
    }

    func openFileDetailsView(file: FileModel) {
        router.presentDetailView(from: view, file: file)
    }

    func authenticateWith(username: String, password: String) {
        interactor?.retrieveCrendetials(username: username,
                                        password: password)
        view?.authenticating()
    }

    func sendMessageFor(gistId: GistId, message: String) {
        interactor?.sendMessage(forGistId: gistId, message: message)
        view?.sendingMessage()
    }

    // MARK: - GistDetailInteractorOutputProtocol
    func didReceived(comments: [GistComment]) {
        if comments.isEmpty {
            view?.presentEmpty()
            return
        }
        view?.show(comments: comments)
    }

    func authenticated() {
        view?.presentMessageInput()
    }

    func authenticationFail() {
        view?.authenticationFail()
    }

    func onMessageFailure() {
        view?.messageFail()
    }

    func onMessageSent(message: GistComment) {
        view?.messageSent(message: message)
    }

    @objc func authenticateOrSendMessageAction() {
        if AppSettings.Keys.hasToken {
            view?.presentMessageInput()
            return
        }
        view?.requestCredentials()
    }
}
